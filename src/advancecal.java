
import java.math.*;
import javax.swing.UIManager;
/**
 *
 * @author Daniel Temtayo
 */
public class advancecal extends javax.swing.JFrame {
private boolean zerodisp;
private boolean decdisp;
private boolean dgrrad;
private boolean sh;

private byte op;

private double ina;
private double inb;
private double out;
    
    public advancecal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        display1 = new javax.swing.JTextField();
        memorydisplay = new javax.swing.JTextField();
        display2 = new javax.swing.JTextField();
        degrees = new javax.swing.JRadioButton();
        radians = new javax.swing.JRadioButton();
        memorysave = new javax.swing.JButton();
        memoryclear = new javax.swing.JButton();
        memoryrecall = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        onedividebyX = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        pi = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        four = new javax.swing.JButton();
        one = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        decpoint = new javax.swing.JButton();
        negate = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        equals = new javax.swing.JButton();
        squared = new javax.swing.JButton();
        add = new javax.swing.JButton();
        sqroot = new javax.swing.JButton();
        subtract = new javax.swing.JButton();
        cubed = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        cbroot = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        setResizable(false);

        display1.setEditable(false);
        display1.setBackground(new java.awt.Color(0, 153, 153));
        display1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        display1.setText("0");
        display1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display1ActionPerformed(evt);
            }
        });

        memorydisplay.setBackground(new java.awt.Color(0, 102, 102));
        memorydisplay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        memorydisplay.setText("0");

        display2.setEditable(false);
        display2.setBackground(new java.awt.Color(0, 102, 102));
        display2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        display2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(degrees);
        degrees.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        degrees.setSelected(true);
        degrees.setText("deg");
        degrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                degreesActionPerformed(evt);
            }
        });

        buttonGroup1.add(radians);
        radians.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radians.setText("rad");
        radians.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiansActionPerformed(evt);
            }
        });

        memorysave.setBackground(new java.awt.Color(204, 0, 51));
        memorysave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        memorysave.setText("ms");
        memorysave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memorysaveActionPerformed(evt);
            }
        });

        memoryclear.setBackground(new java.awt.Color(204, 0, 51));
        memoryclear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        memoryclear.setText("mc");
        memoryclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryclearActionPerformed(evt);
            }
        });

        memoryrecall.setBackground(new java.awt.Color(204, 0, 51));
        memoryrecall.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        memoryrecall.setText("mr");
        memoryrecall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryrecallActionPerformed(evt);
            }
        });

        sin.setBackground(new java.awt.Color(204, 0, 51));
        sin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sin.setText("sin");
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        cos.setBackground(new java.awt.Color(204, 0, 51));
        cos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cos.setText("cos");
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        tan.setBackground(new java.awt.Color(204, 0, 51));
        tan.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tan.setText("tan");
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        onedividebyX.setBackground(new java.awt.Color(204, 0, 51));
        onedividebyX.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        onedividebyX.setText("1/x");
        onedividebyX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onedividebyXActionPerformed(evt);
            }
        });

        percent.setBackground(new java.awt.Color(204, 0, 51));
        percent.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        percent.setText("%");
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        pi.setBackground(new java.awt.Color(204, 0, 51));
        pi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pi.setText("pi");
        pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                piActionPerformed(evt);
            }
        });

        seven.setBackground(new java.awt.Color(102, 102, 255));
        seven.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        four.setBackground(new java.awt.Color(102, 102, 255));
        four.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        one.setBackground(new java.awt.Color(102, 102, 255));
        one.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        zero.setBackground(new java.awt.Color(102, 102, 255));
        zero.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        decpoint.setBackground(new java.awt.Color(102, 102, 255));
        decpoint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        decpoint.setText(".");
        decpoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decpointActionPerformed(evt);
            }
        });

        negate.setBackground(new java.awt.Color(204, 0, 51));
        negate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        negate.setText("+/-");
        negate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negateActionPerformed(evt);
            }
        });

        two.setBackground(new java.awt.Color(102, 102, 255));
        two.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setBackground(new java.awt.Color(102, 102, 255));
        three.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        five.setBackground(new java.awt.Color(102, 102, 255));
        five.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setBackground(new java.awt.Color(102, 102, 255));
        six.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        eight.setBackground(new java.awt.Color(102, 102, 255));
        eight.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setBackground(new java.awt.Color(102, 102, 255));
        nine.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        equals.setBackground(new java.awt.Color(204, 0, 51));
        equals.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        equals.setText("=");
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });

        squared.setBackground(new java.awt.Color(204, 0, 51));
        squared.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        squared.setText("x2");
        squared.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squaredActionPerformed(evt);
            }
        });

        add.setBackground(new java.awt.Color(204, 0, 51));
        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        sqroot.setBackground(new java.awt.Color(204, 0, 51));
        sqroot.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sqroot.setText("sqt");
        sqroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrootActionPerformed(evt);
            }
        });

        subtract.setBackground(new java.awt.Color(204, 0, 51));
        subtract.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        subtract.setText("-");
        subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractActionPerformed(evt);
            }
        });

        cubed.setBackground(new java.awt.Color(204, 0, 51));
        cubed.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cubed.setText("x3");
        cubed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cubedActionPerformed(evt);
            }
        });

        multiply.setBackground(new java.awt.Color(204, 0, 51));
        multiply.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        multiply.setText("*");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        cbroot.setBackground(new java.awt.Color(204, 0, 51));
        cbroot.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbroot.setText("cbrt");
        cbroot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbrootActionPerformed(evt);
            }
        });

        divide.setBackground(new java.awt.Color(204, 0, 51));
        divide.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        divide.setText("/");
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(204, 0, 51));
        clear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        clear.setText("CE");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(204, 0, 51));
        reset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        reset.setText("c");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jToggleButton1.setBackground(new java.awt.Color(204, 0, 51));
        jToggleButton1.setText("sh");
        jToggleButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(memoryclear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(memoryrecall, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(memorysave, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(memorydisplay))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(decpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(negate, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(0, 0, Short.MAX_VALUE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(sqroot, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cbroot, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cubed, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(divide, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(degrees)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(radians)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(squared, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(onedividebyX, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(pi, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGap(3, 3, 3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(display2)
                            .addComponent(display1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cubed, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(memorydisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(memorysave)
                                            .addComponent(memoryrecall)
                                            .addComponent(memoryclear))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(onedividebyX)
                                            .addComponent(percent)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(degrees)
                                            .addComponent(radians))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(sin)
                                            .addComponent(cos)
                                            .addComponent(tan)
                                            .addComponent(pi)
                                            .addComponent(jToggleButton1))))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(squared, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sqroot, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbroot, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(negate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decpoint, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void degreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_degreesActionPerformed
dgrrad=false;

    }//GEN-LAST:event_degreesActionPerformed

    private void memorysaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memorysaveActionPerformed
        memorydisplay.setText(String.valueOf(display1.getText()));
    }//GEN-LAST:event_memorysaveActionPerformed

    private void display1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display1ActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
           if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"1");
    zerodisp=true;
    
    }//GEN-LAST:event_oneActionPerformed

    private void negateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negateActionPerformed
   inb= Double.parseDouble(String.valueOf(display1.getText()));
   out= inb * -1;
   if(out > -1000000000 && out< 1000000000){
       display1.setText(String.valueOf(out));
   }
   else{
   display1.setText("abeg no stress me");
   }
  decdisp= true;
  out=0;
    }//GEN-LAST:event_negateActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"0");
    
    }//GEN-LAST:event_zeroActionPerformed

    private void decpointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decpointActionPerformed
        if(!decdisp){
        display1.setText(display1.getText()+".");}
        decdisp=true;
    }//GEN-LAST:event_decpointActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
         if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"2");
    zerodisp=true;
   
    }//GEN-LAST:event_twoActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
       if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"3");
    zerodisp=true;
    
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
            if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"4");
    zerodisp=true;
    
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
           if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"5");
    zerodisp=true;
    
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
      if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"6");
    zerodisp=true;
   
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
           if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"7");
    zerodisp=true;
    
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
          if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"8");
    zerodisp=true;
    
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
           if(!zerodisp && !decdisp){
        display1.setText(null);
        }
    display1.setText(display1.getText()+"9");
    zerodisp=true;
    
    }//GEN-LAST:event_nineActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
      display1.setText("0");
      zerodisp=false;
      decdisp=false;
    }//GEN-LAST:event_clearActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
display1.setText(null);
display2.setText("0");
zerodisp=false;
decdisp=false;
ina=0;
inb=0;
out=0;  
    }//GEN-LAST:event_resetActionPerformed

    private void memoryrecallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryrecallActionPerformed
    display1.setText(String.valueOf(memorydisplay.getText()));
    }//GEN-LAST:event_memoryrecallActionPerformed

    private void memoryclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryclearActionPerformed
       memorydisplay.setText("");
    }//GEN-LAST:event_memoryclearActionPerformed

    private void onedividebyXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onedividebyXActionPerformed
   inb= Double.parseDouble(String.valueOf(display1.getText()));
   out= 1/inb;
   
    if(out > -1000000000 && out< 1000000000){
       display1.setText(String.valueOf(out));
   }
   else{
   display1.setText("abeg no stress me");
   }
    display2.setText(String.valueOf("1/"+inb));
    out=0;
    }//GEN-LAST:event_onedividebyXActionPerformed

    private void piActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_piActionPerformed
    display1.setText(String.valueOf(Math.PI));

    }//GEN-LAST:event_piActionPerformed

    private void squaredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squaredActionPerformed
        inb= Double.parseDouble(String.valueOf(display1.getText()));
   out=inb*inb;
   
    if(out > -1000000000 && out< 1000000000){
       display1.setText(String.valueOf(out));
   }
   else{
   display1.setText("abeg no stress me");
   }
    display2.setText(String.valueOf(inb+"sqrd"));
    out=0;
    }//GEN-LAST:event_squaredActionPerformed

    private void sqrootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrootActionPerformed
       inb= Double.parseDouble(String.valueOf(display1.getText()));
    out=Math.sqrt(inb);
   
    if(out > -1000000000 && out< 1000000000){
       display1.setText(String.valueOf(out));
   }
    display2.setText("sqrt of"+inb);
    out=0;
    }//GEN-LAST:event_sqrootActionPerformed

    private void cubedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cubedActionPerformed
inb= Double.parseDouble(String.valueOf(display1.getText()));
    out=inb*inb*inb;
   
    if(out > -1000000000 && out< 1000000000){
       display1.setText(String.valueOf(out));
   }
    else{
    display2.setText("ahan small small na");
    }
    out=0;
    }//GEN-LAST:event_cubedActionPerformed

    private void radiansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiansActionPerformed
        dgrrad=true;
    }//GEN-LAST:event_radiansActionPerformed

    private void jToggleButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton1MouseClicked
if(!sh){
sh=true;
}else{
sh=false;
}
    }//GEN-LAST:event_jToggleButton1MouseClicked

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
inb=Double.parseDouble(String.valueOf(display1.getText()));
        if(!sh){
    if(!dgrrad){
    display2.setText("sin("+String.valueOf(inb)+")");
        inb= inb*0.0174532925;
    }
    out= Math.sin(inb);
    }
else{
      display2.setText("sinh("+String.valueOf(inb)+")");
   out=Math.sinh(inb);
}
    display1.setText(String.valueOf(out));
out=0;    
    }//GEN-LAST:event_sinActionPerformed

    private void cbrootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbrootActionPerformed
 inb=Double.parseDouble(String.valueOf(display1.getText()));
 out= Math.cbrt(inb);
 display1.setText(String.valueOf(out));
 
 out=0;
    }//GEN-LAST:event_cbrootActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
inb=Double.parseDouble(String.valueOf(display1.getText()));
        if(!sh){
    if(!dgrrad){
    display2.setText("cos("+String.valueOf(inb)+")");
        inb= inb*0.0174532925;
    }
    out= Math.cos(inb);
    }
else{
      display2.setText("cosh("+String.valueOf(inb)+")");
   out=Math.cosh(inb);
}
    display1.setText(String.valueOf(out));
out=0; 
    }//GEN-LAST:event_cosActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
       inb=Double.parseDouble(String.valueOf(display1.getText()));
        if(!sh){
    if(!dgrrad){
    display2.setText("tan("+String.valueOf(inb)+")");
        inb= inb*0.0174532925;
    }
    out= Math.tan(inb);
    }
else{
      display2.setText("tanh("+String.valueOf(inb)+")");
   out=Math.tanh(inb);
}
    display1.setText(String.valueOf(out));
out=0; 
    }//GEN-LAST:event_tanActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
   if(op==0){
   ina=Double.parseDouble(String.valueOf(display1.getText()));
   }
   else{
   inb=Double.parseDouble(String.valueOf(display1.getText()));
   }
   if(op==1){ina= ina+inb;}
       if(op==2){ina=ina-inb;}
       if(op==3){ina=ina*inb;}
       if(op==4){ina=ina/inb;}
       if(op==5){ina=ina*inb/100;}
       display1.setText(String.valueOf(ina)+ "+");
       display2.setText("0");
       op=1;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_addActionPerformed

    private void subtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractActionPerformed
     if(op==0){
   ina=Double.parseDouble(String.valueOf(display1.getText()));
   }
   else{
   inb=Double.parseDouble(String.valueOf(display1.getText()));
   }
   if(op==1){ina= ina+inb;}
       if(op==2){ina=ina-inb;}
       if(op==3){ina=ina*inb;}
       if(op==4){ina=ina/inb;}
       if(op==5){ina=ina*inb/100;}
       display1.setText(String.valueOf(ina)+ "-");
       display2.setText("0");
       op=2;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_subtractActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        if(op==0){
   ina=Double.parseDouble(String.valueOf(display1.getText()));
   }
   else{
   inb=Double.parseDouble(String.valueOf(display1.getText()));
   }
   if(op==1){ina= ina+inb;}
       if(op==2){ina=ina-inb;}
       if(op==3){ina=ina*inb;}
       if(op==4){ina=ina/inb;}
       if(op==5){ina=ina*inb/100;}
       display1.setText(String.valueOf(ina)+ "*");
       display2.setText("0");   
       op=3;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_multiplyActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
         if(op==0){
   ina=Double.parseDouble(String.valueOf(display1.getText()));
   }
   else{
   inb=Double.parseDouble(String.valueOf(display1.getText()));
   }
   if(op==1){ina= ina+inb;}
       if(op==2){ina=ina-inb;}
       if(op==3){ina=ina*inb;}
       if(op==4){ina=ina/inb;}
       if(op==5){ina=ina*inb/100;}
       display1.setText(String.valueOf(ina)+ "/");
       display2.setText("0");
       op=4;
       
       decdisp=false;
       zerodisp=false;
    }//GEN-LAST:event_divideActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
      
       ina=Double.parseDouble(String.valueOf(display1.getText()));
       display1.setText("0");
       display2.setText(display2.getName()+ "%");
       
       decdisp=false;
       zerodisp=false;
       op=5;
       
    }//GEN-LAST:event_percentActionPerformed

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsActionPerformed
    inb=Double.parseDouble(String.valueOf(display1.getText()));
    if(op==0){
    out= ina+inb;
    display2.setText(String.valueOf(inb));
    }
 if(op==1){
    out= ina+inb;
    display2.setText(display2.getText()+String.valueOf(inb));
    }    
 if(op==2){
    out= ina-inb;
    display2.setText(display2.getText()+String.valueOf(inb));
    }
  if(op==3){
    out= ina*inb;
    display2.setText(display2.getText()+String.valueOf(inb));
    }
   if(op==4){
    out= ina/inb;
    display2.setText(display2.getText()+String.valueOf(inb));
    }
    if(op==5){
    out= ina*inb/100;
    display2.setText(display2.getText()+String.valueOf(inb));
    }
      if(out > -2000000000 && out< 2000000000){
       display1.setText(String.valueOf(out));
   }
    else{
    display2.setText("abeg le me joor");
    }
      ina=0;
      inb=0;
      out=0;
      op=0;
      zerodisp=false;
      decdisp=false;  
    }//GEN-LAST:event_equalsActionPerformed

    private void display2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_display2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            /*   if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }*/ UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel"); 
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(advancecal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(advancecal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(advancecal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(advancecal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new advancecal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cbroot;
    private javax.swing.JButton clear;
    private javax.swing.JButton cos;
    private javax.swing.JButton cubed;
    private javax.swing.JButton decpoint;
    private javax.swing.JRadioButton degrees;
    private javax.swing.JTextField display1;
    private javax.swing.JTextField display2;
    private javax.swing.JButton divide;
    private javax.swing.JButton eight;
    private javax.swing.JButton equals;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton memoryclear;
    private javax.swing.JTextField memorydisplay;
    private javax.swing.JButton memoryrecall;
    private javax.swing.JButton memorysave;
    private javax.swing.JButton multiply;
    private javax.swing.JButton negate;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton onedividebyX;
    private javax.swing.JButton percent;
    private javax.swing.JButton pi;
    private javax.swing.JRadioButton radians;
    private javax.swing.JButton reset;
    private javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton six;
    private javax.swing.JButton sqroot;
    private javax.swing.JButton squared;
    private javax.swing.JButton subtract;
    private javax.swing.JButton tan;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
